git clone https://github.com/zalando/postgres-operator.git
cd postgres-operator

helm install postgres-operator ./charts/postgres-operator

check if its running
kubectl get pod -l app.kubernetes.io/name=postgres-operator


helm install postgres-operator-ui ./charts/postgres-operator-ui

check if its running
kubectl get pod -l app.kubernetes.io/name=postgres-operator-ui


kubectl create -f manifests/pgdb.yaml





pgdb.yaml
apiVersion: "acid.zalan.do/v1"
kind: postgresql
metadata:
  labels:
    team: loco
  name: loco-pgdb
  namespace: default
spec:
  allowedSourceRanges: null
  numberOfInstances: 3
  users:
    zalando:  # database owner
    - superuser
    - createdb
    foo_user: []  # role for application foo
  databases:
    foo: zalando  # dbname: owner
  preparedDatabases:
    bar: {}
  postgresql:
    version: "14"
  resources:
    limits:
      cpu: 500m
      memory: 500Mi
    requests:
      cpu: 100m
      memory: 100Mi
  teamId: loco
  volume:
    size: 10Gi
    storageClass: local-storage
    
    
   
   
   # check the deployed cluster
kubectl get postgresql

# check created database pods
kubectl get pods -l application=spilo -L spilo-role

# check created service resources
kubectl get svc -l application=spilo -L spilo-role



###################to be created before starting above deployment####################


pv definitions


apiVersion: v1
kind: PersistentVolume
metadata:
  name: loco-pv21
spec:
  capacity:
    storage: 15Gi
  accessModes:
  - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: local-storage
  local:
    path: /dev/sdc1
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - vm21


apiVersion: v1
kind: PersistentVolume
metadata:
  name: loco-pv22
spec:
  capacity:
    storage: 15Gi
  accessModes:
  - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: local-storage
  local:
    path: /dev/sdc1
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - vm22




apiVersion: v1
kind: PersistentVolume
metadata:
  name: loco-pv23
spec:
  capacity:
    storage: 15Gi
  accessModes:
  - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: local-storage
  local:
    path: /dev/sdc1
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - vm23
 #######################ignore below things##################      
          
Once partitions are created, run below
   
dd if=/dev/zero of=/dev/sdc1 bs=1M count=512 status=progress
kubectl port-forward svc/postgres-operator-ui 9090:80 --address='0.0.0.0'

pvc example:
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: loco-pvc-21
spec:
  accessModes:
  - ReadWriteOnce
  storageClassName: local-storage
  resources:
    requests:
      storage: 15Gi


sudo apt-get install curl ca-certificates gnupg
curl https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -
sudo sh -c 'echo "deb http://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list'
sudo apt-get update
sudo apt install postgresql-client-11
pg_basebackup -V



kubectl get secrets -o yaml postgres.loco-pgdb.credentials.postgresql.acid.zalan.do -n locopgdb

echo "cmljYXV2R3dkM0pobW9OWGtObFA1MEx0ZUVhUzhMOHY3dDEzUlNuTVV6UHFsWG12dHAxNmlrcXYwelZoM2JVVg==" | base64 -d
kubectl exec --stdin --tty loco-pgdb-0  -n locopgdb -- /bin/bash
psql -U postgres
\password
enter new password

kubectl delete po postgres-operator-6dd8984889-6gx5z -n postgres-operator


registries configuration

documentation

nfs client installation
